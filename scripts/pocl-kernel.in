#!/bin/sh
# pocl-kernel - Examine a OpenCL bytecode and generate a loadable module
#               with kernel function information.
# 
# Copyright (c) 2011-2012 Universidad Rey Juan Carlos, 
# Pekka Jääskeläinen / Tampere University of Technology
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

while getopts k:o: o
do
    case "$o" in
	k)   kernel="${OPTARG}";;
	o)   output_file="${OPTARG}";;
	[?]) echo >&2 "Usage: $0 -k <kernel> -o <output_file> <input_file>" && exit 1;;
    esac
done
shift $((${OPTIND}-1))

if [ "x$kernel" = x ]
then
    echo >&2 "Usage: $0 -k <kernel> -o <output_file> <input_file>" && exit 1
fi

if [ "x$output_file" = x ]
then
    echo >&2 "Usage: $0 -k <kernel> -o <output_file> <input_file>" && exit 1
fi

header="`dirname $1`/`basename $1 .bc`_header.h"

rm -f ${header}

if [ -f @abs_top_builddir@/lib/llvmopencl/.libs/llvmopencl.so ]
then
    @OPT@ -load=@abs_top_builddir@/lib/llvmopencl/.libs/llvmopencl.so -generate-header -kernel=${kernel} -header=${header} -disable-output $1
else
    @OPT@ -load=@pkglibdir@/llvmopencl.so -generate-header -kernel=${kernel} -header=${header} -disable-output $1
fi

@CLANG@ -c -o ${output_file}.o -x c - <<EOF
#include "${header}"

unsigned _num_args = _${kernel}_NUM_ARGS;
int _arg_is_pointer[] = _${kernel}_ARG_IS_POINTER;
int _arg_is_local[] = _${kernel}_ARG_IS_LOCAL;
unsigned _num_locals = _${kernel}_NUM_LOCALS;
#if _${kernel}_NUM_LOCALS != 0
unsigned _local_sizes[_${kernel}_NUM_LOCALS] = _${kernel}_LOCAL_SIZE;
#endif
EOF

ld ${output_file}.o @HOST_LD_FLAGS@ -o ${output_file}
