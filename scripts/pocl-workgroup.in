#!/bin/sh
# pocl-workgroup - Parallelize a kernel from an OpenCL bytecode file.
# 
# Copyright (c) 2011 Universidad Rey Juan Carlos
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

target=@HOST@

while getopts k:x:y:z:t:o: o
do
    case "$o" in
	k)   kernel="${OPTARG}";;
	x)   size_x="${OPTARG}";;
	y)   size_y="${OPTARG}";;
	z)   size_z="${OPTARG}";;
	t)   target="${OPTARG}";;
	o)   output_file="${OPTARG}";;
	[?]) echo >&2 "Usage: $0 -k <kernel> [-x <size>] [-y <size>] [-z <size>] [-t <target_arch>] -o <output_file> <input_file>" && exit 1;;
    esac
done
shift $((${OPTIND}-1))

if [ "x$kernel" = x ]
then
    echo >&2 "Usage: $0 -k <kernel> [-x <size>] [-y <size>] [-z <size>] [-t <target_arch>] -o <output_file> <input_file>" && exit 1
fi

if [ "x$size_x" = x ]
then
    size_x=1
fi

if [ "x$size_y" = x ]
then
    size_y=1
fi

if [ "x$size_z" = x ]
then
    size_z=1
fi

if [ "x$output_file" = x ]
then
    echo >&2 "Usage: $0 -k <kernel> [-x <size>] [-y <size>] [-z <size>] -o <output_file> <input_file>" && exit 1
fi

linked_bc="`dirname $1`/`basename $1 .bc`_linked.bc"
linked_out="${linked_bc}.out"

if [ -f @abs_top_builddir@/lib/kernel/${target}/libkernel.a ]
then
    @LLVM_LD@ -o ${linked_out} -b ${linked_bc} $1 -L@abs_top_builddir@/lib/kernel/${target} -lkernel
else
    @LLVM_LD@ -o ${linked_out} -b ${linked_bc} $1 -L@pkglibdir@/${target} -lkernel
fi
rm ${linked_out}

header="`dirname $1`/`basename $1 .bc`_header.h"

pocl_lib=@pkglibdir@/llvmopencl.so
if [ -f @abs_top_builddir@/lib/llvmopencl/.libs/llvmopencl.so ]
then
    pocl_lib=@abs_top_builddir@/lib/llvmopencl/.libs/llvmopencl.so
fi


@OPT@ -load=${pocl_lib} -generate-header -flatten -always-inline \
    -globaldce -loop-simplify -isolate-regions -loop-barriers \
    -barriertails -barriers -isolate-regions -workitem -workgroup \
    -kernel=${kernel} -local-size=${size_x} ${size_y} ${size_z} -header=${header} -o ${output_file} ${linked_bc}

