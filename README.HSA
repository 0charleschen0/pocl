NOTE: The support is _very_ experimental and preliminary (pretty much untested
apart from the example1), so beware. You should check it out only if you are willing
to help in the development.

NOTE: Until things stabilize a bit, the 'hsa' branch contains new development
over pocl-hsa: https://github.com/pocl/pocl/tree/hsa

The experimental HSA driver works only with an AMD Kaveri using LLVM's R600
backend and LLVM 3.6 at the moment.

You need to install the HSA preliminary runtime library via

  git clone http://www.cs.tut.fi/~pjaaskel/HSA-Runtime-Reference-Source-legacy.git

Then install its libhsa-runtime64.so so it's found by the pocl configure.

NOTE: At the time of this writing the upstream HSA Runtime Reference Source
uses a new version of the binary format which is not yet supported by the
R600 LLVM backend (situation with LLVM 3.6, 2015-05-19). Until this situation
is solved, you need to use the older version from the above link.

The clang must be configured with the AMD backends. It can be done by
adding '--enable-experimental-targets=R600' to the LLVM configure command.

After that, configure pocl with a command line similar to this:

  ./configure --enable-hsa-amdgcn --with-hsa-runtime-headers=$HOME/src/HSA-Runtime-Reference-Source-legacy/inc

Then, you can smoke test the HSA driver by executing the HSA tests of the
pocl testsuite:

  make check TESTSUITEFLAGS="-k hsa"
